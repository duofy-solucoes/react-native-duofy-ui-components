var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _react=_interopRequireDefault(require("react"));var _reactNative=require("@testing-library/react-native");var _=_interopRequireDefault(require("."));var _globals=require("@jest/globals");var _jsxFileName="/home/tiagoangelods/projects/tas.digital/react-native-duofy-ui-components/src/components/Button/index.spec.tsx";var onPressMock=_globals.jest.fn();(0,_globals.beforeEach)(function(){(0,_reactNative.render)(_react.default.createElement(_.default,{text:"testing button",onPress:onPressMock,__source:{fileName:_jsxFileName,lineNumber:12,columnNumber:10}}));});(0,_globals.afterEach)(_reactNative.cleanup);(0,_globals.it)('Render Button correctly',function(){var button=_reactNative.screen.getByTestId('button-component');(0,_globals.expect)(button).toBeDefined();});(0,_globals.it)('Render Button correctly and be clickable',function(){var button=_reactNative.screen.getByTestId('button-component');(0,_globals.expect)(button).toBeDefined();(0,_globals.expect)(button.props.children[0].props.text).toBe('testing button');_reactNative.fireEvent.press(button);(0,_globals.expect)(onPressMock).toBeCalled();});
//# sourceMappingURL=index.spec.js.map