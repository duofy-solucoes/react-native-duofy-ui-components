var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _react=_interopRequireDefault(require("react"));var _reactNative=require("@testing-library/react-native");var _=_interopRequireDefault(require("."));var _globals=require("@jest/globals");var _jsxFileName="/home/tiagoangelods/projects/tas.digital/react-native-duofy-ui-components/src/components/Text/index.spec.tsx";(0,_globals.beforeEach)(function(){(0,_reactNative.render)(_react.default.createElement(_.default,{text:"testing text",__source:{fileName:_jsxFileName,lineNumber:11,columnNumber:10}}));});(0,_globals.afterEach)(_reactNative.cleanup);(0,_globals.it)('Render Text correctly',function(){var textInput=_reactNative.screen.getByTestId('text-component');(0,_globals.expect)(textInput).toBeDefined();});(0,_globals.it)('Render Text to be type equals to Text',function(){var textInput=_reactNative.screen.getByTestId('text-component');(0,_globals.expect)(textInput).toBeDefined();(0,_globals.expect)(textInput.type).toBe('Text');});(0,_globals.it)('Render Text and to have text equals to `testing text`',function(){var textInput=_reactNative.screen.getByTestId('text-component');(0,_globals.expect)(textInput).toBeDefined();(0,_globals.expect)(textInput.props.children).toBe('testing text');});
//# sourceMappingURL=index.spec.js.map