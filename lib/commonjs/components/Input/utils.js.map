{"version":3,"names":["getKeyboardType","inputType","keyboardType","getCustomPattern","handleValidation","value","pattern","condition","RegExp","test","length","conditions","map","rule","every"],"sources":["utils.ts"],"sourcesContent":["export function getKeyboardType(inputType: string): Record<string, string> {\n  switch (inputType) {\n    case 'email': {\n      return { inputType: 'email', keyboardType: 'email-address' };\n    }\n    case 'tel': {\n      return { inputType: 'tel', keyboardType: 'phone-pad' };\n    }\n    case 'money':\n    case 'numeric':\n    case 'decimal': {\n      return { inputType: 'decimal', keyboardType: 'decimal-pad' };\n    }\n    case 'url': {\n      return { inputType: 'url', keyboardType: 'url' };\n    }\n    case 'none':\n    case 'text':\n    case 'search':\n    default: {\n      return { inputType: 'text', keyboardType: 'default' };\n    }\n  }\n}\n\nexport function getCustomPattern(inputType: string): string | undefined {\n  switch (inputType) {\n    case 'email': {\n      return '/^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$/';\n    }\n    case 'tel': {\n      return '/^[\\\\+]?[(]?[0-9]{3}[)]?[-\\\\s\\\\.]?[0-9]{3}[-\\\\s\\\\.]?[0-9]{4,6}$/';\n    }\n    case 'decimal':\n    case 'money': {\n      return '^\\\\d+(\\\\,\\\\d{2,3})?$';\n    }\n    default: {\n      return;\n    }\n  }\n}\n\nexport function handleValidation(\n  value: any,\n  pattern: string | string[] | undefined\n): boolean {\n  if (typeof pattern === 'string') {\n    const condition = new RegExp(pattern, 'g');\n    return condition.test(value);\n  }\n\n  if (typeof pattern === 'object' && pattern?.length) {\n    const conditions = pattern?.map((rule) => new RegExp(rule, 'g'));\n    return conditions.every((condition) => condition.test(value));\n  }\n  return true;\n}\n"],"mappings":"qLAAO,QAAS,CAAAA,eAAeA,CAACC,SAAiB,CAA0B,CACzE,OAAQA,SAAS,EACf,IAAK,OAAO,CAAE,CACZ,MAAO,CAAEA,SAAS,CAAE,OAAO,CAAEC,YAAY,CAAE,eAAgB,CAAC,CAC9D,CACA,IAAK,KAAK,CAAE,CACV,MAAO,CAAED,SAAS,CAAE,KAAK,CAAEC,YAAY,CAAE,WAAY,CAAC,CACxD,CACA,IAAK,OAAO,CACZ,IAAK,SAAS,CACd,IAAK,SAAS,CAAE,CACd,MAAO,CAAED,SAAS,CAAE,SAAS,CAAEC,YAAY,CAAE,aAAc,CAAC,CAC9D,CACA,IAAK,KAAK,CAAE,CACV,MAAO,CAAED,SAAS,CAAE,KAAK,CAAEC,YAAY,CAAE,KAAM,CAAC,CAClD,CACA,IAAK,MAAM,CACX,IAAK,MAAM,CACX,IAAK,QAAQ,CACb,QAAS,CACP,MAAO,CAAED,SAAS,CAAE,MAAM,CAAEC,YAAY,CAAE,SAAU,CAAC,CACvD,CACF,CACF,CAEO,QAAS,CAAAC,gBAAgBA,CAACF,SAAiB,CAAsB,CACtE,OAAQA,SAAS,EACf,IAAK,OAAO,CAAE,CACZ,MAAO,yCAAyC,CAClD,CACA,IAAK,KAAK,CAAE,CACV,MAAO,kEAAkE,CAC3E,CACA,IAAK,SAAS,CACd,IAAK,OAAO,CAAE,CACZ,MAAO,sBAAsB,CAC/B,CACA,QAAS,CACP,OACF,CACF,CACF,CAEO,QAAS,CAAAG,gBAAgBA,CAC9BC,KAAU,CACVC,OAAsC,CAC7B,CACT,GAAI,MAAO,CAAAA,OAAO,GAAK,QAAQ,CAAE,CAC/B,GAAM,CAAAC,SAAS,CAAG,GAAI,CAAAC,MAAM,CAACF,OAAO,CAAE,GAAG,CAAC,CAC1C,MAAO,CAAAC,SAAS,CAACE,IAAI,CAACJ,KAAK,CAAC,CAC9B,CAEA,GAAI,MAAO,CAAAC,OAAO,GAAK,QAAQ,EAAIA,OAAO,QAAPA,OAAO,CAAEI,MAAM,CAAE,CAClD,GAAM,CAAAC,UAAU,CAAGL,OAAO,cAAPA,OAAO,CAAEM,GAAG,CAAC,SAACC,IAAI,QAAK,IAAI,CAAAL,MAAM,CAACK,IAAI,CAAE,GAAG,CAAC,GAAC,CAChE,MAAO,CAAAF,UAAU,CAACG,KAAK,CAAC,SAACP,SAAS,QAAK,CAAAA,SAAS,CAACE,IAAI,CAACJ,KAAK,CAAC,GAAC,CAC/D,CACA,MAAO,KAAI,CACb","ignoreList":[]}