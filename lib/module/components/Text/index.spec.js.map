{"version":3,"names":["React","render","screen","cleanup","Text","it","expect","beforeEach","afterEach","createElement","text","textInput","getByTestId","toBeDefined","type","toBe","props","children"],"sources":["index.spec.tsx"],"sourcesContent":["/**\n * @format\n */\nimport React from 'react';\nimport { render, screen, cleanup } from '@testing-library/react-native';\nimport Text from '.';\n\nimport { it, expect, beforeEach, afterEach } from '@jest/globals';\n\nbeforeEach(() => {\n  render(<Text text=\"testing text\" />);\n});\nafterEach(cleanup);\n\nit('Render Text correctly', () => {\n  const textInput = screen.getByTestId('text-component');\n  expect(textInput).toBeDefined();\n});\n\nit('Render Text to be type equals to Text', () => {\n  const textInput = screen.getByTestId('text-component');\n  expect(textInput).toBeDefined();\n  expect(textInput.type).toBe('Text');\n});\n\nit('Render Text and to have text equals to `testing text`', () => {\n  const textInput = screen.getByTestId('text-component');\n  expect(textInput).toBeDefined();\n  expect(textInput.props.children).toBe('testing text');\n});\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,MAAM,EAAEC,OAAO,QAAQ,+BAA+B;AACvE,OAAOC,IAAI,MAAM,GAAG;AAEpB,SAASC,EAAE,EAAEC,MAAM,EAAEC,UAAU,EAAEC,SAAS,QAAQ,eAAe;AAEjED,UAAU,CAAC,MAAM;EACfN,MAAM,eAACD,KAAA,CAAAS,aAAA,CAACL,IAAI;IAACM,IAAI,EAAC;EAAc,CAAE,CAAC,CAAC;AACtC,CAAC,CAAC;AACFF,SAAS,CAACL,OAAO,CAAC;AAElBE,EAAE,CAAC,uBAAuB,EAAE,MAAM;EAChC,MAAMM,SAAS,GAAGT,MAAM,CAACU,WAAW,CAAC,gBAAgB,CAAC;EACtDN,MAAM,CAACK,SAAS,CAAC,CAACE,WAAW,CAAC,CAAC;AACjC,CAAC,CAAC;AAEFR,EAAE,CAAC,uCAAuC,EAAE,MAAM;EAChD,MAAMM,SAAS,GAAGT,MAAM,CAACU,WAAW,CAAC,gBAAgB,CAAC;EACtDN,MAAM,CAACK,SAAS,CAAC,CAACE,WAAW,CAAC,CAAC;EAC/BP,MAAM,CAACK,SAAS,CAACG,IAAI,CAAC,CAACC,IAAI,CAAC,MAAM,CAAC;AACrC,CAAC,CAAC;AAEFV,EAAE,CAAC,uDAAuD,EAAE,MAAM;EAChE,MAAMM,SAAS,GAAGT,MAAM,CAACU,WAAW,CAAC,gBAAgB,CAAC;EACtDN,MAAM,CAACK,SAAS,CAAC,CAACE,WAAW,CAAC,CAAC;EAC/BP,MAAM,CAACK,SAAS,CAACK,KAAK,CAACC,QAAQ,CAAC,CAACF,IAAI,CAAC,cAAc,CAAC;AACvD,CAAC,CAAC"}