{"version":3,"names":["React","render","screen","cleanup","fireEvent","Input","it","expect","afterEach","jest","mockedFunction","fn","createElement","textInput","getByTestId","toBeDefined","props","children","filter","item","toHaveLength","label","caption","placeholder","toBe","value","onChange","onFocus","onBlur","onChangeText","getByDisplayValue","toBeCalledTimes"],"sources":["index.spec.tsx"],"sourcesContent":["/**\n * @format\n */\nimport React from 'react';\nimport { render, screen, cleanup, fireEvent } from '@testing-library/react-native';\nimport Input from '.';\n\nimport { it, expect, afterEach, jest } from '@jest/globals';\n\nconst mockedFunction = jest.fn();\nafterEach(cleanup);\n\nit('Render Input correctly', () => {\n  render(<Input />);\n  const textInput = screen.getByTestId('input-component');\n  expect(textInput).toBeDefined();\n});\n\nit('Render Input correctly and to render only the input', () => {\n  render(<Input />);\n  const textInput = screen.getByTestId('input-component');\n  expect(textInput).toBeDefined();\n  expect(textInput.props.children.filter((item: any) => item)).toHaveLength(1);\n});\n\nit('Render Input correctly and to render input and label', () => {\n  render(<Input label=\"text label\" />);\n  const textInput = screen.getByTestId('input-component');\n  expect(textInput).toBeDefined();\n  expect(textInput.props.children.filter((item: any) => item)).toHaveLength(2);\n});\n\nit('Render Input correctly and to render input, label and caption', () => {\n  render(<Input label=\"text label\" caption=\"text caption\" />);\n  const textInput = screen.getByTestId('input-component');\n  expect(textInput).toBeDefined();\n  expect(textInput.props.children.filter((item: any) => item)).toHaveLength(3);\n});\n\nit('Render Input correctly and to render input and have placeholder equal to `text placeholder`', () => {\n  render(<Input placeholder=\"text placeholder\" />);\n  const textInput = screen.getByTestId('input-component');\n  expect(textInput).toBeDefined();\n  expect(textInput.props.children[1].props.children[0].props.placeholder).toBe(\n    'text placeholder'\n  );\n});\n\nit('Render Input correctly and to render input and have value equal to `text value`', () => {\n  render(<Input value=\"text value\" />);\n  const textInput = screen.getByTestId('input-component');\n  expect(textInput).toBeDefined();\n  expect(textInput.props.children[1].props.children[0].props.value).toBe('text value');\n});\n\nit('Render Input correctly and to render input and execute function onFocus, onBlur, onChangeText', async () => {\n  render(\n    <Input\n      value=\"text value\"\n      onChange={mockedFunction}\n      onFocus={mockedFunction}\n      onBlur={mockedFunction}\n      onChangeText={mockedFunction}\n    />\n  );\n  const textInput = screen.getByDisplayValue('text value');\n  expect(textInput).toBeDefined();\n  fireEvent(textInput, 'changeText', mockedFunction);\n  fireEvent(textInput, 'change', mockedFunction);\n  fireEvent(textInput, 'focus', mockedFunction);\n  fireEvent(textInput, 'blur', mockedFunction);\n  expect(mockedFunction).toBeCalledTimes(4);\n});\n"],"mappings":"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"}